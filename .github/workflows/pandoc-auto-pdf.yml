name: Pandoc PDF Generation

on:
  push:
    branches:
      - main
      - XeLaTeX-Experiment

permissions:
  contents: write

jobs:
  pandoc:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Pandoc
        id: cache-pandoc
        uses: actions/cache@v4
        with:
          path: /usr/local/bin/pandoc
          key: pandoc-$(echo "3.5" | tr -d .)
          restore-keys: |
            pandoc-

      - if: ${{ steps.cache-pandoc.outputs.cache-hit != 'true' }}
        name: Download and install the latest Pandoc
        run: |
          wget https://github.com/jgm/pandoc/releases/download/3.5/pandoc-3.5-linux-amd64.tar.gz -O pandoc.tar.gz
          tar xzf pandoc.tar.gz
          mv pandoc-3.5/bin/pandoc /usr/local/bin/
          chmod +x /usr/local/bin/pandoc

      - name: Setup TeX Live
        uses: teatimeguest/setup-texlive-action@v3
        with:
          packages: |
            scheme-basic
            hyperref
            fancyhdr
            koma-script
            fancyvrb
            booktabs
            footnote

      - name: Install dependencies
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt

      - name: Generate PDF with Pandoc
        run: |
          cd docs
          bash ./bash/run_all.sh
        timeout-minutes: 5 # Increase timeout to accommodate longer execution times

      - name: Set Git user name and email
        run: |
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"

      - name: Add, commit and push changes
        if: github.actor != 'GitHub Actions'
        run: |
          git add docs/pdf/notes.pdf
          git add docs/pdf/notes-long.pdf
          git add mkdocs.yml
          git add 'docs/content/**/*.md'
          git commit -m "Automatic: Update PDFs" || echo "No changes to commit"
          git push
